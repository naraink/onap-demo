tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - https://raw.githubusercontent.com/naraink/aria-extension-cloudify/master/plugins/awssdk/plugin.yaml
  - aria-1.0

node_types:
  http_web_server:
    derived_from: tosca.nodes.WebApplication
    properties:
      port:
        type: integer

topology_template:
  inputs:
    webserver_port:
      description: The HTTP web server port
      type: integer
      default: 9090
    image_id:
      description: AWS EC2 image id to use for the server
      type: string
      default: ami-759bc50a
    instance_type:
      description: AWS EC2 instance type to use for the server
      type: string
      default: t2.micro
    ssh_username:
      type: string
      default: ubuntu
    ssh_port:
      type: integer
      default: 22
    private_key_path:
      description: Path to the private key used to authenticate into the instance
      type: string
      default: /home/ubuntu/Narayanan_K_49630_KP.pem

key_name:
      description: key name to use while creating ec2 instance_type
      type: string
      default: Narayanan_K_49630_KP

  node_templates:
    vm:
      type: aria.aws.nodes.Instance
      properties:
        image_id: { get_input: image_id }
        instance_type: { get_input: instance_type }
        name: aria-aws-hello-world-instance
        parameters:
          key_name: { get_input: key_name }
        client_config: { get_input: client_config }

    http_web_server:
      type: http_web_server
      properties:
        port: { get_input: webserver_port }
      requirements:
        - host: vm
      interfaces:
        Standard:
          configure:
            implementation:
              primary: scripts/configure.sh
              dependencies:
                - "ssh.user > { get_input: ssh_username }"
                - "ssh.key_filename > { get_input: private_key_path }"
                - "ssh.address > { get_attribute: [ vm, public_ip_address ] }"
          start:
            implementation:
              primary: scripts/start.sh
              dependencies:
                - "ssh.user > { get_input: ssh_username }"
                - "ssh.key_filename > { get_input: private_key_path }"
                - "ssh.address > { get_attribute: [ vm, public_ip_address ] }"
          stop:
            implementation:
              primary: scripts/stop.sh
              dependencies:
                - "ssh.user > { get_input: ssh_username }"
                - "ssh.key_filename > { get_input: private_key_path }"
                - "ssh.address > { get_attribute: [ vm, public_ip_address ] }"
  outputs:
    public_ip_address:
      type: string
      value: { get_attribute: [ vm, public_ip_address ] }
